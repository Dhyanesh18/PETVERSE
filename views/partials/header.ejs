<header class="header" id="header">
    <nav id="navbar" class="navbar">
        <div class="nav-content">
            <div class="logo"><a href="/"><i class="fa fa-paw"></i> PetVerse</a></div>
            <div class="nav-icons">
                <a href="/cart" class="icon-btn cart-icon" id="cartIcon">
                    <i class="fa fa-shopping-cart"></i>
                    <span class="cart-count" id="cartCount" style="display: none;">0</span>
                </a>
                <a href="/login" class="icon-btn"><i class="fa fa-user"></i></a>
            </div>
            <div class="search">
                <input 
                    class="search-bar" 
                    id="navbarSearchInput" 
                    type="text" 
                    placeholder="Search pets, products or services" 
                >
                <button class="search-btn" id="navbarSearchBtn">
                    <i class="fa fa-search"></i>
                </button>
                <div id="searchResultsDropdown" class="search-results-dropdown" style="display: none;"></div>
            </div>
            <button class="hamburger" id="hamburger">
                <i class="fa fa-bars"></i>
            </button>
            <ul class="nav-links">
                <% if (typeof navLinks !== 'undefined' && navLinks) { %>
                    <% navLinks.forEach(function(link) { %>
                        <% if (link.dropdown) { %>
                            <li class="dropdown">
                                <a href="<%= link.url %>" class="dropdown-toggle"><%= link.name %> <i class="fa fa-angle-down"></i></a>
                                <ul class="dropdown-menu">
                                    <% link.dropdownItems.forEach(function(item) { %>
                                        <li><a href="<%= item.url %>"><%= item.name %></a></li>
                                    <% }); %>
                                </ul>
                            </li>
                        <% } else { %>
                            <li><a href="<%= link.url %>"><%= link.name %></a></li>
                        <% } %>
                    <% }); %>
                <% } else { %>
                    <li><a href="/home">Home</a></li>
                    <li><a href="/pets">Pets</a></li>
                    <li><a href="/products">Products</a></li>
                    <li class="dropdown">
                        <a href="#" class="dropdown-toggle">Services <i class="fa fa-angle-down"></i></a>
                        <ul class="dropdown-menu">
                            <li><a href="/services">PetCare</a></li>
                            <li><a href="/pets">PetMate</a></li>
                            <li><a href="/events">Events</a></li>
                        </ul>
                    </li>
                    <li><a href="/about">About</a></li>
                <% } %>
            </ul>
        </div>
    </nav>
</header>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.getElementById('navbarSearchInput');
        const searchBtn = document.getElementById('navbarSearchBtn');
        const resultsDropdown = document.getElementById('searchResultsDropdown');

        async function performSearch(query) {
        if (!query.trim()) {
            resultsDropdown.style.display = 'none';
            resultsDropdown.innerHTML = '';
            return;
        }

        try {
            const res = await fetch(`/search/api?term=${encodeURIComponent(query)}`);
            const data = await res.json();

            const { pets, products, services } = data;

            if (pets.length === 0 && products.length === 0 && services.length === 0) {
            resultsDropdown.innerHTML = '<p class="no-results">No results found.</p>';
            resultsDropdown.style.display = 'block';
            return;
            }

            // Create dropdown HTML
            let html = '';

            if (pets.length > 0) {
            html += `<h4>Pets</h4>`;
            pets.forEach(p => {
                html += `<a href="/seller/detail/${p._id}" class="result-item">${p.name} (${p.breed})</a>`;
            });
            }

            if (products.length > 0) {
            html += `<h4>Products</h4>`;
            products.forEach(p => {
                html += `<a href="/buy/${p._id}" class="result-item">${p.name} (${p.brand})</a>`;
            });
            }

            if (services.length > 0) {
            html += `<h4>Services</h4>`;
            services.forEach(s => {
                html += `<a href="/services/${s._id}" class="result-item">${s.serviceType}</a>`;
            });
            }

            resultsDropdown.innerHTML = html;
            resultsDropdown.style.display = 'block';
        } catch (err) {
            console.error('Search failed:', err);
        }
        }

        // Trigger search as you type
        let debounceTimeout;
        searchInput.addEventListener('input', () => {
        clearTimeout(debounceTimeout);
        debounceTimeout = setTimeout(() => {
            performSearch(searchInput.value);
        }, 200);
        });

        // Pressing Enter redirects to full search page
        searchInput.addEventListener('keypress', (e) => {
        if (e.key === 'Enter') {
            resultsDropdown.style.display = 'none';
            window.location.href = `/search?q=${encodeURIComponent(searchInput.value.trim())}`;
        }
        });

        // Hide dropdown when clicking outside
        document.addEventListener('click', (e) => {
        if (!e.target.closest('.search')) {
            resultsDropdown.style.display = 'none';
        }
        });
        // Dropdown menu functionality
        const dropdownToggles = document.querySelectorAll('.dropdown-toggle');
        const dropdownMenus = document.querySelectorAll('.dropdown-menu');
        
        // Hamburger menu functionality
        const hamburger = document.getElementById('hamburger');
        const navLinks = document.querySelector('.nav-links');
        
        // Toggle hamburger menu when clicked
        if (hamburger && navLinks) {
            hamburger.addEventListener('click', function() {
                navLinks.classList.toggle('active');
            });
        }
        
        // Add click event to each dropdown toggle
        dropdownToggles.forEach((toggle) => {
            toggle.addEventListener('click', function(e) {
                // Prevent default link behavior if it's just a toggle (#)
                if (this.getAttribute('href') === '#') {
                    e.preventDefault(); 
                }
                
                // Get the current dropdown menu
                const currentDropdownMenu = this.nextElementSibling;
                if (!currentDropdownMenu || !currentDropdownMenu.classList.contains('dropdown-menu')) return;

                // Toggle the current dropdown menu
                const isShown = currentDropdownMenu.classList.contains('show');

                // Close all other dropdown menus first
                dropdownMenus.forEach(menu => {
                    menu.classList.remove('show');
                });
                
                // If it wasn't shown before, show it now
                if (!isShown) {
                    currentDropdownMenu.classList.add('show');
                }
                
                e.stopPropagation(); // Prevent this click from triggering the document click handler immediately
            });
        });

        // Close all dropdowns when clicking anywhere else on the page
        document.addEventListener('click', function(event) {
            // Check if click is outside of any dropdown toggle or menu
            if (!event.target.closest('.dropdown')) {
                dropdownMenus.forEach(menu => {
                    menu.classList.remove('show');
                });
            }
        });

        // Update cart count on page load
            const cart = JSON.parse(localStorage.getItem('cart')) || [];
            const cartCount = document.getElementById('cartCount');
            if (cartCount) {
                const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
                cartCount.textContent = totalItems;
            cartCount.style.display = totalItems > 0 ? 'inline-block' : 'none';
        }
    });
</script>