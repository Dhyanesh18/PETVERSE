<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PetVerse - Products</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="stylesheet" href="/css/products.css">
</head>
<body>
    <%- include('partials/header') %>

    <!-- Main Content -->
    <div class="main-container">
        <!-- Filters Sidebar -->
        <div class="filters-sidebar">
            <h2>Filters</h2>
            
            <!-- Category Filter -->
            <div class="filter-section">
                <h3>Category</h3>
                <div class="filter-options">
                    <div class="filter-option">
                        <input type="checkbox" id="pet-food" name="category" value="Pet Food">
                        <label for="pet-food">Pet Food</label>
                    </div>
                    <div class="filter-option">
                        <input type="checkbox" id="toys" name="category" value="Toys">
                        <label for="toys">Toys</label>
                    </div>
                    <div class="filter-option">
                        <input type="checkbox" id="accessories" name="category" value="Accessories">
                        <label for="accessories">Accessories</label>
                    </div>
                </div>
            </div>
            
            <!-- Price Filter -->
            <div class="filter-section">
                <h3>Price Range</h3>
                <div class="price-filter">
                    <input type="number" id="min-price" placeholder="Min" min="0">
                    <span>to</span>
                    <input type="number" id="max-price" placeholder="Max" min="0">
                    <button id="apply-price">Apply</button>
                </div>
            </div>
            
            <!-- Brand Filter -->
            <div class="filter-section">
                <h3>Brand</h3>
                <div class="filter-options">
                    <% const brands = [...new Set(products.map(p => p.brand))]; %>
                    <% brands.forEach(brand => { %>
                        <div class="filter-option">
                            <input type="checkbox" id="<%= brand %>" name="brand" value="<%= brand %>">
                            <label for="<%= brand %>"><%= brand %></label>
                        </div>
                    <% }); %>
                </div>
            </div>
            
            <!-- Rating Filter -->
            <div class="filter-section">
                <h3>Rating</h3>
                <div class="filter-options">
                    <div class="filter-option">
                        <input type="checkbox" id="rating4plus" name="rating" value="4">
                        <label for="rating4plus">4★ & above</label>
                    </div>
                    <div class="filter-option">
                        <input type="checkbox" id="rating3plus" name="rating" value="3">
                        <label for="rating3plus">3★ & above</label>
                    </div>
                </div>
            </div>
            
            <button class="clear-filters">Clear All Filters</button>
        </div>

        <!-- Products Display Area -->
        <div class="products-container">
            <div class="products-header">
                <h1><%= categoryTitle %></h1>
                <select class="sort-dropdown">
                    <option value="popular">Most Popular</option>
                    <option value="price-low">Price: Low to High</option>
                    <option value="price-high">Price: High to Low</option>
                    <option value="rating">Highest Rated</option>
                </select>
            </div>

            <!-- Products Grid -->
            <div class="products-grid">
                <% products.forEach(product => { %>
                    <div class="product-card" data-category="<%= product.category %>">
                        <a href="/buy/<%= product._id %>" class="product-link">
                            <div class="product-image">
                                <% if (product.images && product.images.length > 0) { %>
                                    <img src="data:<%= product.images[0].contentType %>;base64,<%= product.images[0].data.toString('base64') %>" alt="<%= product.name %>">
                                <% } else { %>
                                    <img src="/images/default-product.jpg" alt="<%= product.name %>">
                                <% } %>
                            </div>
                            <div class="product-info">
                                <h3 class="product-name"><%= product.name %></h3>
                                <p class="product-brand"><%= product.brand %></p>
                                <div class="product-rating">
                                    <div class="stars">
                                        <% for(let i = 1; i <= 5; i++) { %>
                                            <i class="fas fa-star <%= i <= product.avgRating ? 'filled' : '' %>"></i>
                                        <% } %>
                                    </div>
                                    <span class="review-count">(<%= product.reviewCount %>)</span>
                                </div>
                                <p class="product-description"><%= product.description %></p>
                                <div class="product-price">
                                    <% if (product.discount > 0) { %>
                                        <span class="original-price">₹<%= product.price.toFixed(2) %></span>
                                        <span class="discounted-price">₹<%= (product.price * (1 - product.discount/100)).toFixed(2) %></span>
                                        <span class="discount-badge"><%= product.discount %>% OFF</span>
                                    <% } else { %>
                                        <span class="discounted-price">₹<%= product.price.toFixed(2) %></span>
                                    <% } %>
                                </div>
                                <div class="product-stock">
                                    <% if (product.stock === 0) { %>
                                        Out of Stock
                                    <% } else if (product.stock <= 5) { %>
                                        Only <%= product.stock %> left in stock!
                                    <% } else { %>
                                        In Stock
                                    <% } %>
                                </div>
                            </div>
                        </a>
                        <div class="product-action">
                            <button class="add-to-cart" data-product-id="<%= product._id %>" <%= product.stock === 0 ? 'disabled' : '' %>>
                                Add to Cart
                            </button>
                            <button class="wishlist-btn">
                                <i class="far fa-heart"></i>
                            </button>
                        </div>
                    </div>
                <% }); %>
            </div>

            <!-- Pagination -->
            <% if (totalPages > 1) { %>
                <div class="pagination">
                    <% if (currentPage > 1) { %>
                        <a href="?page=<%= currentPage - 1 %>" class="page-link">
                            <i class="fas fa-chevron-left"></i>
                        </a>
                    <% } %>
                    
                    <% for(let i = 1; i <= totalPages; i++) { %>
                        <a href="?page=<%= i %>" class="page-link <%= i === currentPage ? 'active' : '' %>">
                            <%= i %>
                        </a>
                    <% } %>
                    
                    <% if (currentPage < totalPages) { %>
                        <a href="?page=<%= currentPage + 1 %>" class="page-link">
                            <i class="fas fa-chevron-right"></i>
                        </a>
                    <% } %>
                </div>
            <% } %>
        </div>
    </div>

    <%- include('partials/footer') %>

    <script src="/js/cart-manager.js"></script>
    <script>
    document.addEventListener('DOMContentLoaded', () => {
        // Initialize cart manager
        cartManager.initializeCart();

        // Add to cart button click handler - use event delegation
        document.querySelector('.products-grid').addEventListener('click', async (e) => {
            const addToCartBtn = e.target.closest('.add-to-cart');
            if (addToCartBtn && !addToCartBtn.disabled) {
                e.preventDefault();
                const productId = addToCartBtn.getAttribute('data-product-id');
                if (productId) {
                    try {
                        const result = await cartManager.addToCart(productId, 1);
                        // Removed alert for cart
                        // if (result.success) {
                        //     alert('Product added to cart successfully!');
                        // }
                    } catch (error) {
                        // Removed alert for cart error
                        // alert(error.message || 'Failed to add item to cart. Please try again.');
                    }
                }
            }
        });

        // Wishlist button click handler
        document.querySelector('.products-grid').addEventListener('click', async (e) => {
            const wishlistBtn = e.target.closest('.wishlist-btn');
            if (wishlistBtn) {
                e.preventDefault();
                const productCard = wishlistBtn.closest('.product-card');
                const productId = productCard.querySelector('.add-to-cart').getAttribute('data-product-id');
                // Toggle heart icon (visual feedback)
                const heartIcon = wishlistBtn.querySelector('i');
                heartIcon.classList.toggle('far');
                heartIcon.classList.toggle('fas');
                heartIcon.classList.toggle('wishlist-active');
                // Optionally, send to backend
                try {
                    const response = await fetch('/wishlist/toggle', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ productId })
                    });
                    const data = await response.json();
                    // Removed alert for wishlist error
                    // if (!data.success) {
                    //     alert('Failed to update wishlist');
                    // }
                } catch (err) {
                    // Removed alert for wishlist error
                    // alert('Error updating wishlist');
                }
            }
        });

        // Filter logic
        function filterProducts() {
            const selectedCategories = Array.from(document.querySelectorAll('input[name="category"]:checked')).map(cb => cb.value);
            const minPrice = parseFloat(document.getElementById('min-price').value) || 0;
            const maxPrice = parseFloat(document.getElementById('max-price').value) || Infinity;
            const selectedBrands = Array.from(document.querySelectorAll('input[name="brand"]:checked')).map(cb => cb.value);
            const selectedRatings = Array.from(document.querySelectorAll('input[name="rating"]:checked')).map(cb => parseInt(cb.value));

            document.querySelectorAll('.product-card').forEach(card => {
                const category = card.getAttribute('data-category');
                const brand = card.querySelector('.product-brand')?.textContent.trim();
                const price = parseFloat(card.querySelector('.discounted-price')?.textContent.replace(/[^\d.]/g, ''));
                const rating = card.querySelectorAll('.product-rating .filled').length;

                let show = true;

                if (selectedCategories.length && !selectedCategories.includes(category)) show = false;
                if (price < minPrice || price > maxPrice) show = false;
                if (selectedBrands.length && !selectedBrands.includes(brand)) show = false;
                if (selectedRatings.length && !selectedRatings.some(r => rating >= r)) show = false;

                card.style.display = show ? '' : 'none';
            });
        }

        // Attach filter event listeners
        document.querySelectorAll('input[name="category"], input[name="brand"], input[name="rating"]').forEach(cb => {
            cb.addEventListener('change', filterProducts);
        });
        document.getElementById('min-price').addEventListener('input', filterProducts);
        document.getElementById('max-price').addEventListener('input', filterProducts);
        document.getElementById('apply-price').addEventListener('click', filterProducts);

        // Clear filters
        document.querySelector('.clear-filters').addEventListener('click', function() {
            document.querySelectorAll('input[type="checkbox"]').forEach(checkbox => {
                checkbox.checked = false;
            });
            document.getElementById('min-price').value = '';
            document.getElementById('max-price').value = '';
            filterProducts();
        });
    });
    </script>
        <script>
            // Get all dropdown toggles and menus
            const dropdownToggles = document.querySelectorAll('.dropdown-toggle');
            const dropdownMenus = document.querySelectorAll('.dropdown-menu');
    
            // Add click event to each dropdown toggle
            dropdownToggles.forEach((toggle, index) => {
                toggle.addEventListener('click', function(event) {
                    event.stopPropagation(); // Prevent this click from triggering the document click handler
    
                    // Close all other dropdown menus first
                    dropdownMenus.forEach((menu, menuIndex) => {
                        if (menuIndex !== index) {
                            menu.classList.remove('show');
                        }
                    });
            
                // Toggle the current dropdown menu
                    const currentDropdownMenu = this.nextElementSibling;
                    currentDropdownMenu.classList.toggle('show');
                });
            });
    
        // Close all dropdowns when clicking anywhere else on the page
            document.addEventListener('click', function(event) {
                // Check if click is outside of any dropdown
                if (!event.target.closest('.dropdown')) {
                // Close all dropdown menus
                    dropdownMenus.forEach(menu => {
                        if (menu.classList.contains('show')) {
                            menu.classList.remove('show');
                        }
                    });
                }
            });
        </script>
    <script src="/js/script.js"></script>
</body>
</html>