<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PetVerse - <%= categoryTitle %></title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link rel="stylesheet" href="/css/products.css">
    <link rel="stylesheet" href="/css/styles.css">
    <style>
        /* Cart count style */
        .cart-icon {
            position: relative;
        }
        .cart-count {
            position: absolute;
            top: -5px;
            right: -5px;
            background-color: #ff6b6b;
            color: white;
            font-size: 12px;
            font-weight: bold;
            border-radius: 50%;
            width: 18px;
            height: 18px;
            display: flex;
            justify-content: center;
            align-items: center;
        }
        .product-card {
    display: flex;
    flex-direction: column;
    height: 100%; /* ensures consistent height within the grid */
}

.product-info {
    display: flex;
    flex-direction: column;
    flex-grow: 1; /* allows info section to stretch */
}

.product-description {
    flex-grow: 1; /* allows the text area to expand naturally */
}

.product-action {
    margin-top: auto; /* pushes the buttons to the bottom */
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0px;
    margin-bottom: 5px
}

.product-info {
    padding-top: 0px;  /* was 15px — reduces top space */
    padding-right: 15px;
    margin-right: 5px;     
    margin-left: 5px
}

.product-price {
    font-size: larger;
    font-weight: 500;
    color:#00a152;
}

.add-to-cart {
    margin: 0px;
    padding-left: 10px
}

.pet-details {
    margin-bottom: 15px;
}

.product-name {
    margin-top: -15px;      /* ensures no extra top gap */
    margin-bottom: 10px; /* was 8px — tighter spacing below name */
    font-size: large;
}
    </style>
</head>
<body>
    <%- include('partials/header') %>

    <!-- Main Content -->
    <div class="main-container">
        <!-- Filters Sidebar -->
        <div class="filters-sidebar">
            <h2>Filters</h2>
            
            <!-- Category Filter -->
            <div class="filter-section">
                <h3>Category</h3>
                <div class="filter-options">
                    <% categoryFilters.forEach(filter => { %>
                        <div class="filter-option">
                            <input type="checkbox" id="<%= filter.id %>" name="category" value="<%= filter.value %>">
                            <label for="<%= filter.id %>"><%= filter.label %></label>
                        </div>
                    <% }); %>
                </div>
            </div>
            
            <!-- Price Filter -->
            <div class="filter-section">
                <h3>Price Range</h3>
                <div class="price-filter">
                    <input type="number" id="min-price" placeholder="Min" min="0">
                    <span>to</span>
                    <input type="number" id="max-price" placeholder="Max" min="0">
                    <button id="apply-price">Apply</button>
                </div>
            </div>
            
            <!-- Breed Filter -->
            <div class="filter-section">
              <h3>Breed</h3>
              <div class="filter-options">
                <div class="filter-option">
                  <input type="checkbox" id="german-shepherd" name="breed" value="german-shepherd">
                  <label for="german-shepherd">German Shepherd</label>
                </div>
                <div class="filter-option">
                  <input type="checkbox" id="persian" name="breed" value="persian">
                  <label for="persian">Persian</label>
                </div>
                <div class="filter-option">
                  <input type="checkbox" id="siamese" name="breed" value="siamese">
                  <label for="siamese">Siamese</label>
                </div>
                <!-- Add more breeds as needed -->
              </div>
            </div>

            <!-- Age Filter -->
            <div class="filter-section">
              <h3>Age</h3>
              <div class="filter-options">
                <div class="filter-option">
                  <input type="checkbox" id="puppy" name="age" value="puppy">
                  <label for="puppy">Puppy/Kitten</label>
                </div>
                <div class="filter-option">
                  <input type="checkbox" id="young" name="age" value="young">
                  <label for="young">Young</label>
                </div>
                <div class="filter-option">
                  <input type="checkbox" id="adult" name="age" value="adult">
                  <label for="adult">Adult</label>
                </div>
                <!-- Add more ages as needed -->
              </div>
            </div>
            
            <button class="clear-filters">Clear All Filters</button>
        </div>

        <!-- Products Display Area -->
        <div class="products-container">
            <div class="products-header">
                <h1><%= categoryTitle %></h1>
                <select class="sort-dropdown">
                    <option value="popular">Most Popular</option>
                    <option value="newest">Newest First</option>
                    <option value="price-low">Price: Low to High</option>
                    <option value="price-high">Price: High to Low</option>
                    <option value="age-young">Age: Youngest First</option>
                </select>
            </div>

            <!-- Products Grid -->
            <div class="products-grid">
                <% pets.forEach(pet => { %>
                    <div class="product-card"
                         data-type="pet"
                         data-category="<%= pet.category || '' %>"
                         data-breed="<%= pet.breed || '' %>"
                         data-age="<%= pet.age || '' %>"
                         data-price="<%= pet.price %>"
                         data-pet-id="<%= pet._id %>">
                         <div class="product-image">
                            <% if (pet.images && pet.images.length > 0) { %>
                                <img src="data:<%= pet.images[0].contentType %>;base64,<%= pet.images[0].data.toString('base64') %>" 
                                     alt="<%= pet.name %>">
                            <% } else { %>
                                <img src="/images/default-pet.jpg" alt="No image available">
                            <% } %>
                        </div>
                        <div class="product-info">
                            <h3 class="product-name"><%= pet.breed %></h3>
                            <p class="product-description"><%= pet.description %></p>
                            <div class="product-price">₹<%= pet.price.toFixed(2) %></div>
                            <div class="pet-details">
                                <span class="pet-age"><i class="fas fa-birthday-cake"></i> <%= pet.age %></span>
                                <span class="pet-gender">
                                    <% if (pet.gender === 'male') { %>
                                        <i class="fas fa-mars"></i> Male
                                    <% } else { %>
                                        <i class="fas fa-venus"></i> Female
                                    <% } %>
                                </span>
                            </div>
                            <br/>
                            <div class="product-action">
                                <button onclick="window.location.href='/seller/detail/<%= pet._id %>'" class="add-to-cart">View Details</button>
                                <button class="wishlist-btn"><i class="far fa-heart"></i></button>
                            </div>
                        </div>
                    </div>
                <% }); %>
            </div>

            <!-- Pagination -->
            <div class="pagination">
                <button><i class="fas fa-chevron-left"></i></button>
                <button class="active">1</button>
                <button>2</button>
                <button>3</button>
                <button>...</button>
                <button>10</button>
                <button><i class="fas fa-chevron-right"></i></button>
            </div>
        </div>
    </div>

    <!-- Footer -->
    <%- include('partials/footer') %>

    <script>
        // Filter functionality
        document.querySelector('.clear-filters').addEventListener('click', function() {
            document.querySelectorAll('input[type="checkbox"]').forEach(checkbox => {
                checkbox.checked = false;
            });
            document.getElementById('min-price').value = '';
            document.getElementById('max-price').value = '';
        });
    </script>
    <script src="/js/cart-manager.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize cart count
            if (typeof cartManager !== 'undefined') {
                cartManager.initializeCart();
            } else {
                // Fallback if cart-manager.js is not loaded
                fetch('/cart/count')
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            const cartCount = document.getElementById('cartCount');
                            if (cartCount) {
                                cartCount.textContent = data.cartCount;
                                cartCount.style.display = data.cartCount > 0 ? 'inline-block' : 'none';
                            }
                        }
                    })
                    .catch(error => console.error('Error fetching cart count:', error));
            }
        });
    </script>
    <script src="/js/script.js"></script>
    <style>
        .product-card {
            cursor: pointer;
            transition: transform 0.2s, box-shadow 0.2s;
        }
        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.1);
        }
    </style>
    
    
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        function filterCards() {
            // Get selected categories
            const selectedCategories = Array.from(document.querySelectorAll('input[name="category"]:checked')).map(cb => cb.value.toLowerCase());
            // Get price range
            const minPrice = parseFloat(document.getElementById('min-price').value) || 0;
            const maxPrice = parseFloat(document.getElementById('max-price').value) || Infinity;
            // Get selected breeds (for pets)
            const selectedBreeds = Array.from(document.querySelectorAll('input[name="breed"]:checked')).map(cb => cb.value.toLowerCase());
            // Get selected ages (for pets)
            const selectedAges = Array.from(document.querySelectorAll('input[name="age"]:checked')).map(cb => cb.value.toLowerCase());

            console.log("Selected categories:", selectedCategories);

            document.querySelectorAll('.product-card').forEach(card => {
                const type = card.getAttribute('data-type');
                // Map the category to match the filter value format
                let category = (card.getAttribute('data-category') || '').toLowerCase();
                
                // Convert category names to match the filter values
                const categoryMapping = {
                    'dog': 'dogs',
                    'cat': 'cats',
                    'bird': 'birds',
                    'fish': 'fish',
                    'other': 'other'
                };
                
                // Convert the displayed category to the filter value
                category = categoryMapping[category] || category;
                
                console.log("Card category:", category);
                
                const price = parseFloat(card.getAttribute('data-price')) || 0;
                let show = true;

                // Category filter
                if (selectedCategories.length && !selectedCategories.includes(category)) {
                    console.log("Category filtered out:", category);
                    show = false;
                }
                
                // Price filter
                if (price < minPrice || price > maxPrice) show = false;

                if (type === 'pet') {
                    // Breed filter
                    const breed = (card.getAttribute('data-breed') || '').toLowerCase();
                    if (selectedBreeds.length && !selectedBreeds.includes(breed)) show = false;
                    // Age filter
                    const age = (card.getAttribute('data-age') || '').toLowerCase();
                    if (selectedAges.length && !selectedAges.includes(age)) show = false;
                }

                card.style.display = show ? '' : 'none';
            });
        }

        // Attach event listeners
        document.querySelectorAll('input[name="category"], input[name="breed"], input[name="age"]').forEach(cb => {
            cb.addEventListener('change', filterCards);
        });
        document.getElementById('min-price').addEventListener('input', filterCards);
        document.getElementById('max-price').addEventListener('input', filterCards);
        document.getElementById('apply-price').addEventListener('click', filterCards);

        // Clear filters
        document.querySelector('.clear-filters').addEventListener('click', function() {
            document.querySelectorAll('input[type="checkbox"]').forEach(checkbox => {
                checkbox.checked = false;
            });
            document.getElementById('min-price').value = '';
            document.getElementById('max-price').value = '';
            filterCards();
        });

        // Handle pet card clicks (navigate to detail page)
        document.querySelectorAll('.product-card').forEach(card => {
            card.addEventListener('click', function(e) {
                // Don't navigate if clicking on buttons
                if (e.target.closest('.product-action')) {
                    return;
                }
                
                const petId = this.getAttribute('data-pet-id');
                if (petId) {
                    window.location.href = `/seller/detail/${petId}`;
                }
            });
        });

        // Handle wishlist button clicks
        document.querySelectorAll('.wishlist-btn').forEach(btn => {
            btn.addEventListener('click', async function(e) {
                e.preventDefault();
                e.stopPropagation();
                
                const card = this.closest('.product-card');
                const petId = card ? card.getAttribute('data-pet-id') : null;
                
                if (!petId) {
                    console.error('Pet ID not found');
                    return;
                }
                
                // Toggle heart icon
                const heartIcon = this.querySelector('i');
                heartIcon.classList.toggle('far');
                heartIcon.classList.toggle('fas');
                
                // Send request to backend
                try {
                    const response = await fetch(`/wishlist/pet/${petId}`, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' }
                    });
                    
                    const data = await response.json();
                    
                    if (data.success) {
                        console.log(data.wishlisted ? 'Added to wishlist' : 'Removed from wishlist');
                    } else {
                        // Revert icon if failed
                        heartIcon.classList.toggle('far');
                        heartIcon.classList.toggle('fas');
                        console.error('Failed to update wishlist');
                    }
                } catch (error) {
                    // Revert icon if error
                    heartIcon.classList.toggle('far');
                    heartIcon.classList.toggle('fas');
                    console.error('Error updating wishlist:', error);
                }
            });
        });

        // Load wishlist state on page load
        async function loadWishlistState() {
            try {
                const response = await fetch('/wishlist');
                const data = await response.json();
                
                if (data.success) {
                    const wishlistedPetIds = data.wishlistedPets.map(p => p._id.toString());
                    
                    // Update wishlist buttons
                    document.querySelectorAll('.product-card').forEach(card => {
                        const petId = card.getAttribute('data-pet-id');
                        
                        if (petId && wishlistedPetIds.includes(petId)) {
                            const wishlistBtn = card.querySelector('.wishlist-btn i');
                            if (wishlistBtn) {
                                wishlistBtn.classList.remove('far');
                                wishlistBtn.classList.add('fas');
                            }
                        }
                    });
                }
            } catch (error) {
                console.error('Error loading wishlist state:', error);
            }
        }

        // Load wishlist state
        loadWishlistState();
    });
    </script>
</body>
</html>